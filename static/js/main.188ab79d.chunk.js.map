{"version":3,"sources":["components/Editor/Controls/BackGroundColor.js","components/Editor/Controls/Color.js","components/Editor/Controls/FontFamily.js","components/Editor/Controls/FontSize.js","components/Editor/JSONPreview.js","components/Editor/Editor.js","App.js","index.js"],"names":["colors","BackGroundColor","value","onChange","name","id","e","target","map","key","style","backgroundColor","Color","color","safeFonts","sortFonts","nameA","nameB","FontFamily","sort","fontSizes","FontSize","JSONPreview","content","className","JSON","stringify","Editor","editor","useRef","useState","fontFamily","setFontFamily","fontSize","setFontSize","setColor","setBackgroundColor","parsedContent","setParsedContent","useEffect","current","document","getElementById","addEventListener","handleEditorContentChange","execCommand","removeEventListener","focus","parseNode","childNodes","node","nodeArr","forEach","mapNode","length","textContent","nodeObject","text","parentStyle","parentNode","getComputedParentStyle","push","removeDuplicatedNodeObjects","parent","property","window","getComputedStyle","getPropertyValue","reduce","accumulator","currentElement","lastElement","slice","contentEditable","spellCheck","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.188ab79d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst colors = [\"black\", \"red\", \"blue\", \"maroon\", \"green\", \"pink\"];\r\n\r\nconst BackGroundColor = ({ value, onChange }) => {\r\n  const handleChange = (e) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      name=\"backgroundColor\"\r\n      id=\"backgroundColor\"\r\n      onChange={handleChange}\r\n      value={value}\r\n    >\r\n      <option value=\"\">-- Select background color --</option>\r\n      {colors.map((value) => (\r\n        <option value={value} key={value} style={{ backgroundColor: value }}>\r\n          {value}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default BackGroundColor;\r\n","import React from \"react\";\r\n\r\nconst colors = [\"black\", \"red\", \"blue\", \"maroon\", \"green\", \"pink\"];\r\n\r\nconst Color = ({ value, onChange }) => {\r\n  const handleChange = (e) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <select name=\"color\" id=\"color\" onChange={handleChange} value={value}>\r\n      <option value=\"\">-- Select font color --</option>\r\n      {colors.map((value) => (\r\n        <option value={value} key={value} style={{ color: value }}>\r\n          {value}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default Color;\r\n","import React from \"react\";\r\n\r\nconst safeFonts = [\r\n  { name: \"Georgia\", value: \"Georgia, serif\" },\r\n  {\r\n    name: \"Palatino Linotype\",\r\n    value: \"'Palatino Linotype', 'Book Antiqua', Palatino, serif\",\r\n  },\r\n  { name: \"Times New Roman\", value: \"'Times New Roman', Times, serif\" },\r\n  { name: \"Arial\", value: \"Arial, Helvetica, sans-serif\" },\r\n  { name: \"Comic Sans MS\", value: \"'Comic Sans MS', cursive, sans-serif\" },\r\n  { name: \"Impact\", value: \"Impact, Charcoal, sans-serif\" },\r\n  {\r\n    name: \"Lucida Sans Unicode\",\r\n    value: \"'Lucida Sans Unicode', 'Lucida Grande', sans-serif\",\r\n  },\r\n  { name: \"Tahoma\", value: \"Tahoma, Geneva, sans-serif\" },\r\n  { name: \"Trebuchet MS\", value: \"'Trebuchet MS', Helvetica, sans-serif\" },\r\n  { name: \"Courier New\", value: \"'Courier New', Courier, monospace\" },\r\n];\r\n\r\nconst sortFonts = ({ name: nameA }, { name: nameB }) => {\r\n  if (nameA > nameB) return 1;\r\n  if (nameA < nameB) return -1;\r\n  return 0;\r\n};\r\n\r\nconst FontFamily = ({ value, onChange }) => {\r\n  const handleChange = (e) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <select\r\n      name=\"fontFamily\"\r\n      id=\"fontFamily\"\r\n      onChange={handleChange}\r\n      value={value}\r\n    >\r\n      <option value=\"\">-- Select font --</option>\r\n      {safeFonts.sort(sortFonts).map(({ name, value }) => (\r\n        <option value={value} key={value}>\r\n          {name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default FontFamily;\r\n","import React from \"react\";\r\n\r\nconst fontSizes = [\r\n  { name: 10, value: 1 },\r\n  { name: 13, value: 2 },\r\n  { name: 16, value: 3 },\r\n  { name: 18, value: 4 },\r\n  { name: 24, value: 5 },\r\n  { name: 32, value: 6 },\r\n  { name: 48, value: 7 },\r\n];\r\n\r\nconst FontSize = ({ value, onChange }) => {\r\n  const handleChange = (e) => {\r\n    onChange(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <select name=\"fontSize\" id=\"fontSize\" onChange={handleChange} value={value}>\r\n      <option value=\"\">-- Select size --</option>\r\n      {fontSizes.map(({ name, value }) => (\r\n        <option value={value} key={value}>\r\n          {name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nexport default FontSize;\r\n","import React from \"react\";\r\n\r\nconst JSONPreview = ({ content }) => {\r\n  return (\r\n    <>\r\n      <h2 className=\"title\">JSON preview</h2>\r\n      <div className=\"json-preview\">\r\n        <pre>{JSON.stringify(content, null, 2)}</pre>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default JSONPreview;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useRef, useEffect, useState } from \"react\";\r\nimport BackGroundColor from \"./Controls/BackGroundColor\";\r\nimport Color from \"./Controls/Color\";\r\nimport FontFamily from \"./Controls/FontFamily\";\r\nimport FontSize from \"./Controls/FontSize\";\r\n\r\nimport \"./editor.css\";\r\nimport JSONPreview from \"./JSONPreview\";\r\n\r\nconst Editor = () => {\r\n  const editor = useRef(null);\r\n  // Controls state\r\n  const [fontFamily, setFontFamily] = useState(\"\");\r\n  const [fontSize, setFontSize] = useState(\"\");\r\n  const [color, setColor] = useState(\"\");\r\n  const [backgroundColor, setBackgroundColor] = useState(\"\");\r\n\r\n  // Parsed content\r\n  const [parsedContent, setParsedContent] = useState([]);\r\n\r\n  useEffect(() => {\r\n    editor.current = document.getElementById(\"editor\");\r\n\r\n    document.addEventListener(\"DOMSubtreeModified\", handleEditorContentChange);\r\n\r\n    document.execCommand(\"styleWithCSS\", false, true);\r\n\r\n    return () => {\r\n      document.removeEventListener(\r\n        \"DOMSubtreeModified\",\r\n        handleEditorContentChange\r\n      );\r\n    };\r\n  }, []);\r\n\r\n  // Controls change events\r\n  useEffect(() => {\r\n    editor.current.focus();\r\n    document.execCommand(\"fontName\", false, fontFamily);\r\n    handleEditorContentChange();\r\n  }, [fontFamily]);\r\n\r\n  useEffect(() => {\r\n    editor.current.focus();\r\n    document.execCommand(\"fontSize\", false, fontSize);\r\n    handleEditorContentChange();\r\n  }, [fontSize]);\r\n\r\n  useEffect(() => {\r\n    editor.current.focus();\r\n    document.execCommand(\"foreColor\", false, color);\r\n    handleEditorContentChange();\r\n  }, [color]);\r\n\r\n  useEffect(() => {\r\n    editor.current.focus();\r\n    document.execCommand(\"hiliteColor\", false, backgroundColor);\r\n    handleEditorContentChange();\r\n  }, [backgroundColor]);\r\n\r\n  // Handle JSON creation\r\n  const handleEditorContentChange = () => {\r\n    setParsedContent(parseNode(editor.current.childNodes));\r\n  };\r\n\r\n  const parseNode = (node) => {\r\n    const nodeArr = [];\r\n    const mapNode = (node) => {\r\n      if (!!node.childNodes?.length) {\r\n        // If node is parent - map through children\r\n        node.childNodes.forEach(mapNode);\r\n      } else {\r\n        // If node has no children and has text content - create new object\r\n        if (node.textContent) {\r\n          const nodeObject = { text: node.textContent };\r\n          // Get styles from parent element (use parent node if it has styles, use computed styles if they are inherited)\r\n          const parentStyle = node.parentNode.style;\r\n          nodeObject.fontFamily =\r\n            parentStyle.fontFamily ||\r\n            getComputedParentStyle(node.parentNode, \"font-family\");\r\n          nodeObject.fontSize =\r\n            parentStyle.fontSize ||\r\n            getComputedParentStyle(node.parentNode, \"font-size\");\r\n          nodeObject.color =\r\n            parentStyle.color ||\r\n            getComputedParentStyle(node.parentNode, \"color\");\r\n\r\n          nodeObject.backgroundColor =\r\n            parentStyle.backgroundColor ||\r\n            getComputedParentStyle(node.parentNode, \"background-color\");\r\n\r\n          nodeArr.push(nodeObject);\r\n        }\r\n      }\r\n    };\r\n\r\n    node.forEach(mapNode);\r\n\r\n    return removeDuplicatedNodeObjects(nodeArr);\r\n  };\r\n\r\n  const getComputedParentStyle = (parent, property) =>\r\n    window.getComputedStyle(parent).getPropertyValue(property);\r\n\r\n  const removeDuplicatedNodeObjects = (nodeArr) => {\r\n    return nodeArr.reduce((accumulator, currentElement) => {\r\n      const lastElement = accumulator[accumulator.length - 1];\r\n      if (\r\n        accumulator.length > 1 &&\r\n        lastElement &&\r\n        currentElement.fontFamily ===\r\n          accumulator[accumulator.length - 1].fontFamily &&\r\n        currentElement.fontSize ===\r\n          accumulator[accumulator.length - 1].fontSize &&\r\n        currentElement.color === accumulator[accumulator.length - 1].color &&\r\n        currentElement.backgroundColor ===\r\n          accumulator[accumulator.length - 1].backgroundColor\r\n      )\r\n        return [\r\n          ...accumulator.slice(0, accumulator.length - 1),\r\n          { ...currentElement, text: lastElement.text + currentElement.text },\r\n        ];\r\n\r\n      return [...accumulator, currentElement];\r\n    }, []);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">Text editor</h1>\r\n\r\n      <div className=\"controls\">\r\n        <FontFamily value={fontFamily} onChange={setFontFamily} />\r\n\r\n        <FontSize value={fontSize} onChange={setFontSize} />\r\n\r\n        <Color value={color} onChange={setColor} />\r\n\r\n        <BackGroundColor\r\n          value={backgroundColor}\r\n          onChange={setBackgroundColor}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        id=\"editor\"\r\n        contentEditable=\"true\"\r\n        className=\"editor\"\r\n        spellCheck={false}\r\n        onChange={handleEditorContentChange}\r\n      />\r\n\r\n      <JSONPreview content={parsedContent} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React from \"react\";\n\nimport Editor from \"./components/Editor/Editor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Editor />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}